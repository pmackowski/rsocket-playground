syntax = "proto3";
option java_package = "io.github.pmackowski.rsocket.raft.rpc";
option java_multiple_files = true;

message PreVoteRequest {
    int32 next_term = 1; // candidate’s term + 1
    int32 candidate_id = 2; // candidate requesting vote
    int64 last_log_index = 3; // index of candidate’s last log entry (§5.4)
    int64 last_log_term = 4; // term of candidate’s last log entry (§5.4)
}

message PreVoteResponse {
    int32 term = 1;
    bool vote_granted = 2;
}

message VoteRequest {
    int32 term = 1; // candidate’s term
    int32 candidate_id = 2; // candidate requesting vote
    int64 last_log_index = 3; // index of candidate’s last log entry (§5.4)
    int64 last_log_term = 4; // term of candidate’s last log entry (§5.4)
}

message VoteResponse {
    int32 term = 1;
    bool vote_granted = 2;
}

message AppendEntriesRequest {
    int32 term = 1; // set leader’s term
    int32 leader_id = 2; // leaderId so follower can redirect clients
    int64 prev_log_index = 3; // index of log entry immediately preceding new ones
    int64 prev_log_term = 4; // term of prevLogIndex entry
    repeated bytes entries = 5; // log entries to store (empty for heartbeat may send more than one for efficiency)
    int64 leader_commit = 6; // leader’s commitIndex
}

message AppendEntriesResponse {
    int32 term = 1; // currentTerm, for leader to update itself
    bool success = 2;
}

message AddServerRequest {
    int32 new_server = 1; // address of server to add to configuration
}

message AddServerResponse {
    bool status = 1; // OK if server was added successfully
    int32 leader_hint = 2; // address of recent leader, if known
}

message RemoveServerRequest {
    int32 old_server = 1; // address of server to remove from configuration
}

message RemoveServerResponse {
    bool status = 1; // OK if server was removed successfully
    int32 leader_hint = 2; // address of recent leader, if known
}

message InstallSnapshotRequest {
    int32 term = 1; // leader’s term
    int32 leader_id = 2; // so follower can redirect clients
    int64 last_included_index = 3; // the snapshot replaces all entries up through and including this index
    int64 last_included_term = 4; // lastIncludedTerm term of lastIncludedIndex offset byte offset where chunk is positioned in the snapshot file
    bytes data = 5; // raw bytes of the snapshot chunk, starting at offset
    bool done = 6; // true if this is the last chunk
}

message InstallSnapshotResponse {
    int32 term = 1; // currentTerm, for leader to update itself
}

message CommandRequest {
    string key = 1;
    string value = 2;
    bool set_operation = 3;
}